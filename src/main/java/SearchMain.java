import com.google.gson.JsonObject;
import com.theja.jsonsearch.controller.Search;
import com.theja.jsonsearch.utils.JsonUtils;
import com.theja.jsonsearch.utils.PrintUtils;
import org.apache.commons.lang3.StringUtils;
import org.apache.logging.log4j.LogManager;
import org.apache.logging.log4j.Logger;

import java.io.IOException;
import java.nio.charset.StandardCharsets;
import java.util.ArrayList;
import java.util.List;
import java.util.Scanner;
import java.util.Set;
import java.util.concurrent.atomic.AtomicInteger;

/*
 * This Java source file was generated by the Gradle 'init' task.
 */
public class SearchMain {
    private static final Logger LOGGER = LogManager.getLogger();

    private static final String USERS = "users";
    private static final String TICKETS = "tickets";
    private static final String ORGS = "organizations";
    private static final String QUIT = "quit";
    private static final List<String> WELCOME_MENU;
    static {
        WELCOME_MENU = new ArrayList<>();
        WELCOME_MENU.add(USERS);
        WELCOME_MENU.add(TICKETS);
        WELCOME_MENU.add(ORGS);
        WELCOME_MENU.add(QUIT);
    }

    public static void main(String[] args) {
        PrintUtils.print("Welcome to Search");
        while (true) {
            printWelcomeText();
            // read the category that user intends to search
            Scanner scanner = new Scanner(System.in, StandardCharsets.UTF_8.name());
            String optedCategory = scanner.nextLine().trim();
            if(!StringUtils.isNumeric(optedCategory)) {
                PrintUtils.print("Invalid option entered. " +
                        "Please enter a number between 1 and 4 based on below preference");
                continue;
            }
            int selectedCategory = Integer.parseInt(optedCategory);
            if(selectedCategory <= 0 || selectedCategory > WELCOME_MENU.size()) {
                PrintUtils.print("Invalid text entered. " +
                        "Please enter a number between 1 and 4 based on below preference");
                continue;
            }

            if (WELCOME_MENU.indexOf(QUIT) == (selectedCategory-1)) {
                System.exit(1);
            }
            String selectedCategoryName = WELCOME_MENU.get(selectedCategory-1);
            // based on selected search category, show searchable fields
            PrintUtils.print(String.format("Below are the searchable fields for category %s, select your search term",
                            selectedCategoryName));

            Set<String> availableFields = Search.getAvailableSearchableFieldsOnCategory(selectedCategoryName);
            availableFields.forEach(PrintUtils::print);
            String optedSearchTerm = scanner.nextLine().trim();
            if(StringUtils.isEmpty(optedSearchTerm) || !availableFields.contains(optedSearchTerm)) {
                PrintUtils.print("Invalid searchable field selected. " +
                        "Please make sure you selected correct category and field");
                continue;
            }
            PrintUtils.print("Enter the search value");
            String optedSearchValue = scanner.nextLine().trim();
            try{
                List<JsonObject> searchResult =
                        Search.performSearchOperation(selectedCategoryName, optedSearchTerm, optedSearchValue);
                JsonUtils.printResults(selectedCategoryName, searchResult);
            }
            catch (IOException ex) {
                LOGGER.error("Unable to perform search currently", ex);
                PrintUtils.print("Unable to perform search currently. Please contact support team");
            }
        }
    }


    private static void printWelcomeText() {
        PrintUtils.print(StringUtils.EMPTY);
        PrintUtils.print("Below are the list of categories to search for");
        AtomicInteger counter = new AtomicInteger(0);
        WELCOME_MENU.stream()
                .map(s -> "\t  " + counter.addAndGet(1) + ". " + s)
                .forEach(System.out::println);
        PrintUtils.print("Please enter your selection between 1 to 4: ");
    }

}
